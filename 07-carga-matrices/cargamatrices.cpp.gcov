        -:    0:Source:cargamatrices.cpp
        -:    0:Graph:cargamatrices.gcno
        -:    0:Data:cargamatrices.gcda
        -:    0:Runs:2
        -:    1:#include <iostream>
        -:    2:using namespace std;
        -:    3:
        1:    4:void cargarPorFilas(double* matriz, int filas, int columnas) {
     1001:    5:    for (int i = 0; i < filas; i++) {
  1001000:    6:        for (int j = 0; j < columnas; j++) {
  1000000:    7:             matriz[i * columnas + j] = 0.0;
        -:    8:        }
        -:    9:    }
        1:   10:}
        -:   11:
        1:   12:void cargarPorColumnas(double* matriz, int filas, int columnas) {
     1001:   13:    for (int j = 0; j < columnas; j++) {
  1001000:   14:        for (int i = 0; i < filas; i++) {
  1000000:   15:            matriz[i * columnas + j] = 0.0;
        -:   16:        }
        -:   17:    }
        1:   18:}
        -:   19:
        1:   20:void cargarLinealmente(double* matriz, int filas, int columnas) {
  1000001:   21:    for (int i = 0; i < filas * columnas; i++) {
  1000000:   22:        matriz[i] = 0.0;
        -:   23:    }
        1:   24:}
        -:   25:
        2:   26:int main(int argc, char* argv[]) {
        2:   27:    if (argc != 3) {
        1:   28:        cout << "Uso: " << argv[0] << " <filas> <columnas>" << endl;
        1:   29:        return 1;
        -:   30:    }
        1:   31:    int filas = atoi(argv[1]);
        1:   32:    int columnas = atoi(argv[2]);
        -:   33:
        1:   34:    if (filas <= 0 || columnas <= 0) {
    #####:   35:        cout << "Las dimensiones de la matriz deben ser mayores que cero." << endl;
    #####:   36:        return 1;
        -:   37:    }
        -:   38:
       1*:   39:    double* matriz = new double[filas * columnas];
        -:   40: 
        1:   41:    cargarPorFilas(matriz, filas, columnas);
        1:   42:    cargarPorColumnas(matriz, filas, columnas);
        1:   43:    cargarLinealmente(matriz, filas, columnas);
        -:   44:
        1:   45:    delete[] matriz;
        -:   46:
        1:   47:    return 0;
        -:   48:}
